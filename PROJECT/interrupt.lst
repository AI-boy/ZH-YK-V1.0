C51 COMPILER V9.01   INTERRUPT                                                             03/20/2019 11:22:05 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE INTERRUPT
OBJECT MODULE PLACED IN ..\OBJ\interrupt.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\src\interrupt.c LARGE BROWSE FLOATFUZZY(4) INCDIR(..\include;C:\Keil\C51
                    -\INC\STC) DEBUG OBJECTEXTEND PRINT(.\interrupt.lst) OBJECT(..\OBJ\interrupt.obj)

line level    source

   1          
   2          //**--------------头文件-------------------------------------------------------
   3          #include "STC8.h"
   4          #include "intrins.h"
   5          
   6          #include <stdio.h>
   7          #include <string.h>
   8          
   9          #include "userdefine.h" 
  10          
  11          //**--------------全局变量-----------------------------------------------------
  12          
  13          //**--------------函数申明-----------------------------------------------------
  14          
  15          //**--------------函数定义-----------------------------------------------------
  16          
  17          
  18          
  19          
  20          
  21          
  22          unsigned char system_run_time=0x00;   //系统运行软件定时器
  23          
  24          unsigned int system_time_count=0x00;  
  25          
  26          unsigned int display_lcd_time_count=0x00;
  27                                                                  
  28          unsigned char display_lcd_flag=0x01;
  29          
  30          unsigned char dat_flag=0x00;
  31          
  32          
  33          
  34          /**********************************************************************
  35          *函数名称：interrupt isr
  36          *描述：中断服务程序
  37          *返回类型：void
  38          *输入形参：void
  39          ***********************************************************************/
  40          //-------------------------------------------TIME0中断服务程序入口1优先级1(0,1,2,3)
  41          void TM0_Isr() interrupt 1 using 1
  42          {
  43   1      
  44   1              TF0 = 0;
  45   1              //------------------------------------------------------
  46   1                                              if(system_run_time==0x01)
  47   1                                              {
  48   2                                                      //-----------------------------------------------------------------------------------
  49   2                                                      system_time_count++;
  50   2                                              
  51   2                                                      if(system_time_count>1000)  //1s
  52   2                                                      {
  53   3                                                              system_time_count=0x00;
  54   3                                                              
C51 COMPILER V9.01   INTERRUPT                                                             03/20/2019 11:22:05 PAGE 2   

  55   3      
  56   3                                                              system_power_on_time_count++;
  57   3                                                      
  58   3                                                              if(system_power_on_time_count>=180)//180s内无按键按下则自动关机
  59   3                                                              {
  60   4                                                                      system_power_on_time_count=0x00;
  61   4                                                                      
  62   4                                                                      POWER_OFF;
  63   4                                                              }
  64   3                                                                                                                                                                                                                              
  65   3                                                      }
  66   2                                                      //---------------------------------------------------------------------------------
  67   2                                                      scan_key_time_count++;
  68   2                                                      
  69   2                                                      if(scan_key_time_count>=40)    //50ms扫描按键
  70   2                                                      {
  71   3                                                              scan_key_time_count=0x00;
  72   3                                                              
  73   3                                                              handle_scan_key_flag=0x01;
  74   3                                                      }
  75   2                                                      //---------------------------------------------------------------------------------
  76   2                                                      display_lcd_time_count++;
  77   2                                                      
  78   2                                                      if(display_lcd_time_count>=400) //500ms刷新LCD显示
  79   2                                                      {
  80   3                                                              display_lcd_time_count=0x00;
  81   3                                                              
  82   3                                                              dat_flag = dat_flag^0x01;
  83   3                                                              
  84   3                                                              display_lcd_flag=0x01;
  85   3      
  86   3                                                      }
  87   2                                                      //---------------------------------------------------------------------------------
  88   2                                                      
  89   2                                                      if(poll_time_enable)
  90   2                                                      {
  91   3                                                              poll_time_count++;
  92   3                                                      
  93   3                                                              if(poll_time_count>=1000)
  94   3                                                              {
  95   4                                                                      poll_time_count=0x00;
  96   4                                                                      
  97   4                                                                      poll_task_flag=0x01;
  98   4                                                              }
  99   3                                                      }
 100   2                                              
 101   2                                                      //---------------------------------------------------------------------------------
 102   2                                                      if(beep_delay_time_count>0)
 103   2                                                      {
 104   3                                                              beep_delay_time_count--;
 105   3      
 106   3                                                              if(beep_delay_time_count==0x00)
 107   3                                                              {
 108   4                                                                      BEEP_OFF;
 109   4                                                              }
 110   3                                                      }
 111   2                                                      
 112   2                                                      
 113   2                                              }
 114   1                                                                              
 115   1                                              //------------------------------------------------------
 116   1                      
C51 COMPILER V9.01   INTERRUPT                                                             03/20/2019 11:22:05 PAGE 3   

 117   1                                              if (uart2_time_count > 0x00)   //UART1接受结束鉴别
 118   1                                              {
 119   2                                                      uart2_time_count--;
 120   2                                                      
 121   2                                                      if(uart2_time_count==0)
 122   2                                                      {
 123   3                                                              if((uart2_receive_byte_count==54)&&(uart2_rx_buf[1]==0xB1)&&(uart2_rx_buf[53]==0xAA))
 124   3                                                              {
 125   4                                                                      rx_frame_kind=0x01;
 126   4                                                                      
 127   4                                                                      uart2_receive_flag=TRUE;
 128   4                                                              }
 129   3                                                              else if((uart2_receive_byte_count==21)&&(uart2_rx_buf[1]==0xB2)&&(uart2_rx_buf[20]==0xAA))
 130   3                                                              {
 131   4                                                                      rx_frame_kind=0x02;
 132   4                                                                      
 133   4                                                                      uart2_receive_flag=TRUE;
 134   4                                                              }
 135   3                                                              else if((uart2_receive_byte_count==6)&&(uart2_rx_buf[1]==0xB3)&&(uart2_rx_buf[5]==0xAA))
 136   3                                                              {
 137   4                                                                      rx_frame_kind=0x03;
 138   4                                                                      
 139   4                                                                      uart2_receive_flag=TRUE;
 140   4                                                              }
 141   3                                                              else if((uart2_receive_byte_count==6)&&(uart2_rx_buf[1]==0xB4)&&(uart2_rx_buf[5]==0xAA))
 142   3                                                              {
 143   4                                                                      rx_frame_kind=0x04;
 144   4                                                                      
 145   4                                                                      uart2_receive_flag=TRUE;
 146   4                                                              }
 147   3                                                              else if((uart2_receive_byte_count==6)&&(uart2_rx_buf[1]==0xB5)&&(uart2_rx_buf[5]==0xAA))
 148   3                                                              {
 149   4                                                                      rx_frame_kind=0x05;
 150   4                                                                      
 151   4                                                                      uart2_receive_flag=TRUE;
 152   4                                                              }
 153   3                                                              else if((uart2_receive_byte_count==6)&&(uart2_rx_buf[1]==0xB6)&&(uart2_rx_buf[5]==0xAA))
 154   3                                                              {
 155   4                                                                      rx_frame_kind=0x06;
 156   4                                                                      
 157   4                                                                      uart2_receive_flag=TRUE;
 158   4                                                              }
 159   3                                                              else
 160   3                                                              {
 161   4                                                                                      S2CON&=~S2REN;
 162   4                                                                                      NOP();
 163   4                                                                                      NOP();
 164   4                                                                                      S2CON|=S2REN;
 165   4                              
 166   4                                                                                      uart2_receive_byte_count=0x00;
 167   4                                                              }
 168   3                                                      }
 169   2                                                      
 170   2                                              }               
 171   1                                                                              
 172   1                      
 173   1      }
 174          
 175          //-------------------------------------------UART2中断服务程序入口8优先级1(0,1,2,3)
 176          void UART2_Isr() interrupt 8 using 1
 177          {
 178   1              unsigned char r2_data;
C51 COMPILER V9.01   INTERRUPT                                                             03/20/2019 11:22:05 PAGE 4   

 179   1      
 180   1          if (TX2IF)
 181   1          {
 182   2             S2CON&=~0x02;                               //清UART2发送中断标志
 183   2                 tx2_mt = 1;                                                             //置标志        
 184   2      
 185   2          }
 186   1          if (RX2IF)
 187   1          {
 188   2              S2CON&=~0x01;                              //清UART2接受中断标志
 189   2              rx2_mt = 1;
 190   2      
 191   2                      r2_data = S2BUF;
 192   2      
 193   2                       uart2_time_count=0x0A;//UART1接收数据 相隔5ms即表示一帧数据的结束  9600--0x05   2400--0x0A
 194   2      
 195   2                  if( (uart2_receive_byte_count<60)&&(uart2_receive_flag==FALSE) )
 196   2                    {
 197   3                       uart2_rx_buf[uart2_receive_byte_count]=r2_data;
 198   3                
 199   3                        if(uart2_rx_buf[0]==0x55)
 200   3                          {
 201   4                             uart2_receive_byte_count++;
 202   4                          } 
 203   3                     } 
 204   2          }
 205   1      }
 206          
 207          /******************************************************************************
 208          ** 函数名称 : init_interrupt
 209          ** 输入参数 : 无
 210          ** 输出参数 : 无
 211          ** 功能描述 : 初始化中断
 212                                    使能外设中断
 213                                    使能全局中断
 214          ** 全局变量 : 无
 215          ** 作    者 : caiwk
 216          ** 日    期 : 2018-01-31
 217          ** 修    改 : 无
 218          ** 版    本 : V1.0
 219          *******************************************************************************/
 220          void init_interrupt(void)
 221          {
 222   1                      
 223   1              ET0 = 1;            //使能定时器0中断
 224   1      
 225   1              TX1IF = 0;          //清UART1发送中断标志
 226   1              RX1IF = 0;          //清UART1接受中断标志
 227   1              ET1 = 0;                    //禁止定时器1中断
 228   1              ES  = 0;                        //使能UART1中断
 229   1      
 230   1              S2CON&=~0x02;       //清UART2发送中断标志
 231   1              S2CON&=~0x01;       //清UART2接受中断标志
 232   1              IE2&=~ET2;                  //禁止定时器2中断
 233   1              IE2|=ES2;                       //使能UART2中断
 234   1      
 235   1              S3CON&=~0x02;       //清UART3发送中断标志
 236   1              S3CON&=~0x01;       //清UART3接受中断标志
 237   1              IE2&=~ET3;                  //禁止定时器3中断
 238   1              IE2&=~ES3;                      //使能UART3中断
 239   1      
 240   1              S4CON&=~0x02;       //清UART4发送中断标志
C51 COMPILER V9.01   INTERRUPT                                                             03/20/2019 11:22:05 PAGE 5   

 241   1              S4CON&=~0x01;       //清UART4接受中断标志
 242   1              IE2&=~ET4;                  //禁止定时器4中断
 243   1              IE2&=~ES4;                      //使能UART4中断
 244   1      
 245   1              EA = 1;                         //使能全局中断
 246   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    589    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      7    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
