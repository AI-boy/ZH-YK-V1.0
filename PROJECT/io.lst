C51 COMPILER V9.01   IO                                                                    03/20/2019 11:22:08 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE IO
OBJECT MODULE PLACED IN ..\OBJ\io.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\src\io.c LARGE BROWSE FLOATFUZZY(4) INCDIR(..\include;C:\Keil\C51\INC\ST
                    -C) DEBUG OBJECTEXTEND PRINT(.\io.lst) OBJECT(..\OBJ\io.obj)

line level    source

   1          
   2          //**--------------头文件-------------------------------------------------------
   3          #include "STC8.h"
   4          #include "intrins.h"
   5          
   6          #include <stdio.h>
   7          #include <string.h>
   8          
   9          #include "userdefine.h" 
  10          
  11          //**--------------全局变量-----------------------------------------------------
  12          
  13          //**--------------函数申明-----------------------------------------------------
  14          
  15          //**--------------函数定义-----------------------------------------------------
  16          
  17          
  18          
  19          
  20          
  21          
  22          
  23          /**********************************************************************
  24          *函数名称：init_port
  25          *描述：端口初始化
  26          *返回类型：void
  27          *输入形参：void
  28          ***********************************************************************/
  29          void init_port(void)
  30          {
  31   1              P0M0 = 0x00;                                //  设置P0.0~P0.7
  32   1          P0M1 = 0xff;                                                                //      初始化为高阻输入模式
  33   1      
  34   1              P1M0 = 0x00;                                //
  35   1          P1M1 = 0xff;                                                                // 初始化为高阻输入模式
  36   1      
  37   1              P2M0 = 0x00;                                //
  38   1          P2M1 = 0xff;                                                                // 初始化为高阻输入模式
  39   1      
  40   1              P3M0 = 0x00;                                //
  41   1          P3M1 = 0xff;                                                                //      初始化为高阻输入模式
  42   1      
  43   1              P4M0 = 0x00;                                //
  44   1          P4M1 = 0xff;                                                                //      初始化为高阻输入模式
  45   1      
  46   1              P5M0 = 0x00;                                //
  47   1          P5M1 = 0xff;                                                                //      初始化为高阻输入模式
  48   1      
  49   1              P6M0 = 0x00;                                //
  50   1          P6M1 = 0xff;                                                                //      初始化为高阻输入模式
  51   1      
  52   1              P7M0 = 0x00;                                //
  53   1          P7M1 = 0xff;                                                                //      初始化为高阻输入模式
  54   1      
C51 COMPILER V9.01   IO                                                                    03/20/2019 11:22:08 PAGE 2   

  55   1              set_io_mode(PORT3,5,STAND);     //P3.5  双向端口 ON/OFF
  56   1              POWER_ON;
  57   1      }
  58          
  59          /**********************************************************************
  60          *函数名称：set_io_mode
  61          *描述：设置端口IO模式
  62          *返回类型：void
  63          *输入形参：void
  64          ***********************************************************************/
  65          void set_io_mode(unsigned char port,unsigned char bit_n,unsigned char mode)
  66          {
  67   1         switch(port)
  68   1         {
  69   2                      case 0:
  70   2                                      switch(mode)
  71   2                                      {
  72   3                                              case STAND              : P0M0&=~(1<<bit_n);P0M1&=~(1<<bit_n);break;   //双向端口模式
  73   3                                                                                                                                                                        
  74   3                                              case PP_OUT             : P0M0|=(1<<bit_n);P0M1&=~(1<<bit_n);break;        //推挽输出模式
  75   3                                              
  76   3                                              case Z_IN               : P0M0&=~(1<<bit_n);P0M1|=(1<<bit_n);break;        //高阻输入模式
  77   3      
  78   3                                              case OD                 : P0M0|=(1<<bit_n);P0M1|=(1<<bit_n);break;         //开漏输出模式
  79   3      
  80   3                                              default:break;
  81   3                                      }
  82   2                                      break;
  83   2                      case 1:
  84   2                                      switch(mode)
  85   2                                      {
  86   3                                              case STAND              : P1M0&=~(1<<bit_n);P1M1&=~(1<<bit_n);break;   //双向端口模式
  87   3                                                                                                                                                                        
  88   3                                              case PP_OUT             : P1M0|=(1<<bit_n);P1M1&=~(1<<bit_n);break;        //推挽输出模式
  89   3                                              
  90   3                                              case Z_IN               : P1M0&=~(1<<bit_n);P1M1|=(1<<bit_n);break;        //高阻输入模式
  91   3      
  92   3                                              case OD                 : P1M0|=(1<<bit_n);P1M1|=(1<<bit_n);break;         //开漏输出模式
  93   3      
  94   3                                              default:break;
  95   3                                      }
  96   2                                      break;
  97   2                      case 2:
  98   2                                      switch(mode)
  99   2                                      {
 100   3                                              case STAND              : P2M0&=~(1<<bit_n);P2M1&=~(1<<bit_n);break;   //双向端口模式
 101   3                                                                                                                                                                        
 102   3                                              case PP_OUT             : P2M0|=(1<<bit_n);P2M1&=~(1<<bit_n);break;        //推挽输出模式
 103   3                                              
 104   3                                              case Z_IN               : P2M0&=~(1<<bit_n);P2M1|=(1<<bit_n);break;        //高阻输入模式
 105   3      
 106   3                                              case OD                 : P2M0|=(1<<bit_n);P2M1|=(1<<bit_n);break;         //开漏输出模式
 107   3      
 108   3                                              default:break;
 109   3                                      }
 110   2                                      break;
 111   2                      case 3:
 112   2                                      switch(mode)
 113   2                                      {
 114   3                                              case STAND              : P3M0&=~(1<<bit_n);P3M1&=~(1<<bit_n);break;   //双向端口模式
 115   3                                                                                                                                                                        
 116   3                                              case PP_OUT             : P3M0|=(1<<bit_n);P3M1&=~(1<<bit_n);break;        //推挽输出模式
C51 COMPILER V9.01   IO                                                                    03/20/2019 11:22:08 PAGE 3   

 117   3                                              
 118   3                                              case Z_IN               : P3M0&=~(1<<bit_n);P3M1|=(1<<bit_n);break;        //高阻输入模式
 119   3      
 120   3                                              case OD                 : P3M0|=(1<<bit_n);P3M1|=(1<<bit_n);break;         //开漏输出模式
 121   3      
 122   3                                              default:break;
 123   3                                      }
 124   2                                      break;
 125   2                      case 4:
 126   2                                      switch(mode)
 127   2                                      {
 128   3                                              case STAND              : P4M0&=~(1<<bit_n);P4M1&=~(1<<bit_n);break;   //双向端口模式
 129   3                                                                                                                                                                        
 130   3                                              case PP_OUT             : P4M0|=(1<<bit_n);P4M1&=~(1<<bit_n);break;        //推挽输出模式
 131   3                                              
 132   3                                              case Z_IN               : P4M0&=~(1<<bit_n);P4M1|=(1<<bit_n);break;        //高阻输入模式
 133   3      
 134   3                                              case OD                 : P4M0|=(1<<bit_n);P4M1|=(1<<bit_n);break;         //开漏输出模式
 135   3      
 136   3                                              default:break;
 137   3                                      }
 138   2                                      break;
 139   2                      case 5:
 140   2                                      switch(mode)
 141   2                                      {
 142   3                                              case STAND              : P5M0&=~(1<<bit_n);P5M1&=~(1<<bit_n);break;   //双向端口模式
 143   3                                                                                                                                                                        
 144   3                                              case PP_OUT             : P5M0|=(1<<bit_n);P5M1&=~(1<<bit_n);break;        //推挽输出模式
 145   3                                              
 146   3                                              case Z_IN               : P5M0&=~(1<<bit_n);P5M1|=(1<<bit_n);break;        //高阻输入模式
 147   3      
 148   3                                              case OD                 : P5M0|=(1<<bit_n);P5M1|=(1<<bit_n);break;         //开漏输出模式
 149   3      
 150   3                                              default:break;
 151   3                                      }
 152   2                                      break;
 153   2                      case 6:
 154   2                                      switch(mode)
 155   2                                      {
 156   3                                              case STAND              : P6M0&=~(1<<bit_n);P6M1&=~(1<<bit_n);break;   //双向端口模式
 157   3                                                                                                                                                                        
 158   3                                              case PP_OUT             : P6M0|=(1<<bit_n);P6M1&=~(1<<bit_n);break;        //推挽输出模式
 159   3                                              
 160   3                                              case Z_IN               : P6M0&=~(1<<bit_n);P6M1|=(1<<bit_n);break;        //高阻输入模式
 161   3      
 162   3                                              case OD                 : P6M0|=(1<<bit_n);P6M1|=(1<<bit_n);break;         //开漏输出模式
 163   3      
 164   3                                              default:break;
 165   3                                      }
 166   2                                      break;
 167   2                      case 7:
 168   2                                      switch(mode)
 169   2                                      {
 170   3                                              case STAND              : P7M0&=~(1<<bit_n);P7M1&=~(1<<bit_n);break;   //双向端口模式
 171   3                                                                                                                                                                        
 172   3                                              case PP_OUT             : P7M0|=(1<<bit_n);P7M1&=~(1<<bit_n);break;        //推挽输出模式
 173   3                                              
 174   3                                              case Z_IN               : P7M0&=~(1<<bit_n);P7M1|=(1<<bit_n);break;        //高阻输入模式
 175   3      
 176   3                                              case OD                 : P7M0|=(1<<bit_n);P7M1|=(1<<bit_n);break;         //开漏输出模式
 177   3      
 178   3                                              default:break;
C51 COMPILER V9.01   IO                                                                    03/20/2019 11:22:08 PAGE 4   

 179   3                                      }
 180   2                                      break;
 181   2      
 182   2                      default:break;
 183   2         }
 184   1      
 185   1              
 186   1      }
 187          
 188          
 189           
 190          
 191          
 192          
 193          
 194          
 195          
 196          
 197          
 198          
 199          
 200          
 201          
 202          
 203          
 204          
 205          
 206          
 207          
 208          
 209          
 210          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    793    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
